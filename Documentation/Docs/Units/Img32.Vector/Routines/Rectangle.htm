<html>

<head>

  <title>Rectangle</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="../../../../Styles/Default.css" type="text/css">
<script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../CodeScripts/bootstrap.js"></script>
</head>

<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../_Body.htm">Index</a><a class="ancestor" href="../_Body.htm">Img32.Vector</a><span class="active">Rectangle</span>
  </div><br><br>

  <h1>Rectangle</h1>
  <p class="Decl"><b>function</b> Rectangle(<b>const</b> rec: TRect): TPathD; <b>overload</b>;</p>
  <p class="Decl"><b>function</b> Rectangle(<b>const</b> rec: TRectD): TPathD; <b>overload</b>;</p>
  <p class="Decl"><b>function</b> Rectangle(l, t, r, b: double): TPathD; <b>overload</b>;</p><br class="half">

  <p> This function returns the points representing the rectangle's 4 corners: top-left, top-right, bottom-right &amp; bottom-left (in that order). </p>
  <div class="code">
    <pre class="brush: delphi;">
uses Img32, Img32.Fmt.PNG, 
  Img32.Vector, Img32.Transform;
...
var
  img: TImage32;
  dst: TPathD;
begin
  img := TImage32.Create;
  img.LoadFromFile('clouds.png');
  
  //setup the transformation geometry
  dst := Rectangle(src.Bounds); 
  dst[0].Y := 20;
  dst[3].Y := img.Height-20; 
  
  //transform and save
  ProjectiveTransform(img, dst);
  img.SaveToFile('clouds_proj.png');
  img.Free;
end;
    </pre>
  </div>
  <div><img style="vertical-align: -90px;" src="../../../../Images/clouds.png"><span class="plusImg"><img src="../../../../Images/right_arrow.png"></span><img style="vertical-align: -90px;" src="../../../../Images/projective.png">

  </div><br>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2023 Angus Johnson&nbsp; - &nbsp;Image32 4.6&nbsp; - &nbsp;Help file built on 18 Sep 2024 <br><br> </p>

</body>

</html>