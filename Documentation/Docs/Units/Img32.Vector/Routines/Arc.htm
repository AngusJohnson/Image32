<html>

<head>

  <title>Arc</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="../../../../Styles/Default.css" type="text/css">
<script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../CodeScripts/bootstrap.js"></script>
</head>

<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../_Body.htm">Index</a><a class="ancestor" href="../_Body.htm">Img32.Vector</a><span class="active">Arc</span>
  </div><br><br>

  <h1>Arc</h1>
  <p class="Decl"><b>function</b> Arc(<b>const</b> rec: TRect; startAngle, endAngle: double): TPathD;</p><br class="half">

  <p>The path follows an elliptical curve defined by the 'rec' parameter. Starting at 'startAngle' (where <span class="Number">0</span> degrees is at 3 o'clock) the <a href="../../Img32/Variables/Img32.htm"><b>ClockwiseRotationIsAnglePositive</b></a> variable will determine the direction in which 'endAngle' will be located. (Angles in this library are always expressed in Radians).<br><br></p>
  <div class="code">
    <pre class="brush: delphi;">
uses 
  Img32, Img32.Fmt.PNG, Img32.Vector, Img32.Draw;
...
var
  path, path2: TPathD;
  rec: TRect;
  img: TImage32;
begin
  img := TImage32.create(256,256);
  rec := Rect(10,30, 256-10, 256-30);
  path := Ellipse(rec);
  DrawLine(img1, path, 20, clNavy32, esPolygon);
  path := Arc(rec, 90 *Pi/180, 360 *Pi/180);
  DrawLine(img1, path, 5, clYellow32, esRound);
  img.SaveToFile('arc.png');
  img.Free;
    </pre>
  </div>
  <div><img src="../../../../Images/arc.png">

  </div>
  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="Pie.htm">Pie</a>, <a href="../../Img32/Variables/Img32.htm">Img32</a></p>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2023 Angus Johnson&nbsp; - &nbsp;Image32 4.2&nbsp; - &nbsp;Help file built on 26 Mar 2023 <br><br> </p>

</body>

</html>