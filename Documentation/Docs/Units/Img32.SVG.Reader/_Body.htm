<html>

<head>

  <title>Img32.SVG.Reader</title>

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="stylesheet" href="../../../Styles/Default.css" type="text/css">
<script type="text/javascript" src="../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../Menu/menu.js"></script><script type="text/javascript" src="../../../CodeScripts/bootstrap.js"></script>
</head>

<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../_Body.htm">Index</a><span class="active">Img32.SVG.Reader</span>
  </div><br><br>

  <h1>Img32.SVG.Reader</h1>
  <p>A huge amount of work is required to parse and render SVG files. It would really require a team of developers to create and maintain a reader that supports the full SVG 2.0 specification. Adding to that challenge, the SVG specification continues to evolve.<br><br> This is a roundabout way of saying that Img32's SVG reader is incomplete. Notable features that are missing include: animation; some less commonly used filters; and support for bi-directional languages (Arabic, Hebrew etc). Nevertheless, compared with other Delphi compiled SVG readers, Img32 does very well indeed (IMHO :)).<br><br> Fortunately for the library user, all this complexity happens behind the scene, so that loading and displaying SVG files can be just as it is for other image formats (by including the <a href="..\Img32.Fmt.SVG\_Body.htm"><b>Img32.Fmt.SVG</b></a> unit in your application's <span class="monobold">uses</span> clause).<br><br> However, occasionally you may need direct access the <a href=".\Classes\TSvgReader\_Body.htm"><b>TSvgReader</b></a> class (eg. to change the background color or to modified a contained element before rendering). </p>
  <div class="code">
<b>Example:</b><br>

    <pre class="brush: delphi;">
var
  element: TSvgElement;
  dd: TDrawData;
begin
  //load and display an SVG file
  with TSvgReader.Create do
  try
    LoadFromFile(mySvgFilename);
    element := FindElement('rect101');
    if assigned(element) then
    begin
      dd := element.DrawData;
      dd.strokeColor := clMaroon32;
      element.DrawData := dd;
    end;
    ImagePanel.Image.SetSize(800,600);
    //draw the SVG proportionally scaled
    //to fit inside the 800 x 600 px image
    DrawImage(ImagePanel.Image, true);
  finally
    free;
  end;
    </pre>
  </div>
  <p class="Hidden"> </p>
  <h2 id="Auto-Contents">Contents</h2>
  <div class="autoTblContainer">
    <div class="autoTbl">
      <div><b>Classes</b>
      </div>
      <div><span><a href="Classes/TSvgReader/_Body.htm">TSvgReader</a></span>

      </div><br>
    </div>
  </div>
  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../Img32.Fmt.SVG/_Body.htm">Img32.Fmt.SVG</a>, <a href="Classes/TSvgReader/_Body.htm">TSvgReader</a></p>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2023 Angus Johnson&nbsp; - &nbsp;Image32 4.2&nbsp; - &nbsp;Help file built on 26 Mar 2023 <br><br> </p>

</body>

</html>