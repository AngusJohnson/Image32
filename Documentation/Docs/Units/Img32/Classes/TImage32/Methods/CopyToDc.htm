<html>

<head>

  <title>CopyToDc</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="../../../../../../Styles/Default.css" type="text/css">
<script type="text/javascript" src="../../../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../../../CodeScripts/bootstrap.js"></script>
</head>

<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../../../_Body.htm">Index</a><a class="ancestor" href="../../../_Body.htm">Img32</a><a class="ancestor" href="../_Body.htm">TImage32</a><span class="active">CopyToDc</span>
  </div><br><br>

  <h1>TImage32.CopyToDc</h1>
  <p class="Decl"><b>procedure</b> CopyToDc(dstDc: HDC; x: Integer = <span class="Number">0</span>; y: Integer = <span class="Number">0</span>; transparent: Boolean = true); <b>overload</b>;</p>

  <p class="Decl"><b>procedure</b> CopyToDc(<b>const</b> srcRect: TRect; dstDc: HDC; x: Integer = 0; y: Integer = 0; transparent: Boolean = true); <b>overload</b>;</p>

  <p class="Decl"><b>procedure</b> CopyToDc(<b>const</b> srcRect, dstRect: TRect; dstDc: HDC; transparent: Boolean = true); <b>overload</b>;</p><br class="half">

  <p>Copies the image into a Window's device context</p>
  <p> 
    <h3>Example 1 - Copying from TImage32 to TImage</h3> 
    <div class="code">
      <pre class="brush: delphi;">
  uses Img32, Img32.Fmt.PNG;
  ...
var
  img: TImage32;
begin
  img := TImage32.Create;
  img.LoadFromResource('Beetle', 'PNG');
  //Image1 is a standard Delphi TImage component
  Image1.Picture.Bitmap.SetSize(img.Width, img.Height);
  img.CopyToDc(Image1.Picture.Bitmap.Canvas.Handle);
  img.Free;
      </pre>
    </div> </p>
  <p> 
    <h3>Example 2 - Printing an image</h3> 
    <div class="code">
      <pre class="brush: delphi;">
  uses Img32, Img32.Fmt.PNG;
  ...
var
  img: TImage32;
  minBorderPxls, PageSizePxls, UsablePageSizePxls: TPoint;
  BorderSizePxls, pxlsPerInch: TPoint;
const
  BorderSizeInch = 0.5; // ie set 1/2" border
begin
  //choose a printer
  if not PrintDialog1.Execute then Exit;

  img := TImage32.Create;
  img.LoadFromResource('Beetle', 'PNG');

  Printer.Orientation := poLandscape;
  Printer.BeginDoc;
  with Printer.Canvas do
  begin
    pxlsPerInch.X   := GetDeviceCaps(Handle, LOGPIXELSX);
    pxlsPerInch.Y   := GetDeviceCaps(Handle, LOGPIXELSY);
    minBorderPxls.X := GetDeviceCaps(Handle, PHYSICALOFFSETX);
    minBorderPxls.Y := GetDeviceCaps(Handle, PHYSICALOFFSETY);
    PageSizePxls.X  := GetDeviceCaps(Handle, PHYSICALWIDTH);
    PageSizePxls.Y  := GetDeviceCaps(Handle, PHYSICALHEIGHT);
  end;
  BorderSizePxls.X := Round(BorderSizeInch.X * pxlsPerInch.X);
  if BorderSizePxls.X &lt; minBorderPxls.X then 
    BorderSizePxls.X := minBorderPxls.X;
  BorderSizePxls.Y := Round(BorderSizeInch.Y * pxlsPerInch.Y);
  if BorderSizePxls.Y &lt; minBorderPxls.Y then 
    BorderSizePxls.Y := minBorderPxls.Y;
  //get printable page size in pixels
  UsablePageSizePxls.X := PageSizePxls.X - BorderSizePxls.X *2;
  UsablePageSizePxls.Y := PageSizePxls.Y - BorderSizePxls.Y *2;
  img.CropTransparentPixels;
  img.SetBackgroundColor(clWhite32);

  //scale the image to fill the whole page
  img.Resampler := rNearestResampler;
  img.ScaleToFit(UsablePageSizePxls.X, UsablePageSizePxls.Y);

  img.CopyToDc(Printer.Canvas.Handle, BorderSizePxls.X, BorderSizePxls.Y);
  Printer.EndDoc;
  img.Free;
      </pre>
    </div> </p>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2023 Angus Johnson&nbsp; - &nbsp;Image32 4.6&nbsp; - &nbsp;Help file built on 18 Sep 2024 <br><br> </p>

</body>

</html>