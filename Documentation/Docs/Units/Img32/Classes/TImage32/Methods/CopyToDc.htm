<html>

<head>
    
  <script type="text/javascript" src="../../../../../../Scripts/SyntaxHighlighter/scripts/shCore.js">
  </script>
    
  <script type="text/javascript" src="../../../../../../Scripts/SyntaxHighlighter/scripts/shBrushDelphi.js">
  </script>
    
  <link type="text/css" rel="stylesheet" href="../../../../../../Scripts/SyntaxHighlighter/styles/shCore.css">
    
  <link type="text/css" rel="stylesheet" href="../../../../../../Scripts/SyntaxHighlighter/styles/shThemeDefault.css">
  

  <title>CopyToDc</title>

  <meta name="viewport" content="width=device-width, initial-scale=1">


  <link rel="stylesheet" href="../../../../../../Styles/Default.css" type="text/css">

    
  <script type="text/javascript" src="../../../../../../Scripts/bootstrap.js">
  </script>
  
</head>

<body bgcolor="#FFFFFF">
    
  <!-- THIS FILE HAS BEEN AUTOMATICALLY PROCESSED FROM A SOURCE COPY -->
    
  <!-- DO NOT EDIT MANUALLY !!! -->
  
  <table class="Banner" cellspacing="0" cellpadding="0" border="0" bordercolorlight="#303080" bordercolordark="#7070B0">
    <tr>
      <td class="Banner" nowrap=""><a href="../../../../../_Body.htm" class="Banner"><img src="../../../../../../Images/_Home.png" align="absmiddle">Index</a>
      </td>
      <td class="Banner" nowrap=""><a href="../../../_Body.htm" class="Banner"><img src="../../../../../../Images/_Unit.png" align="absmiddle">Img32</a>
      </td>
      <td class="Banner" nowrap=""><a href="../_Body.htm" class="Banner"><img src="../../../../../../Images/_Class.png" align="absmiddle">TImage32</a>
      </td>
      <td class="Banner" width="100%" align="right"><img src="../../../../../../Images/_Project_Logo.png" align="absmiddle">
      </td>
    </tr>
  </table>
  <h1>TImage32.CopyToDc</h1>


  <p class="Decl"><b>procedure</b> CopyToDc(dstDc: HDC; x: Integer = <span class="Number">0</span>; y: Integer = <span class="Number">0</span>; transparent: Boolean = true); <b>overload</b>;</p>

  <p class="Decl"><b>procedure</b> CopyToDc(<b>const</b> srcRect: TRect; dstDc: HDC; x: Integer = 0; y: Integer = 0; transparent: Boolean = true); <b>overload</b>;</p>

  <p class="Decl"><b>procedure</b> CopyToDc(<b>const</b> srcRect, dstRect: TRect; dstDc: HDC; transparent: Boolean = true); <b>overload</b>;</p>

<br>

  <p class="Body">Copies the image into a Window's device context</p>



  <p class="Body"> 
    <h3>Example 1 - Copying from TImage32 to TImage</h3> <div class="Code">
      <pre class="brush: delphi;">
  uses Img32, Img32.Fmt.PNG;
  ...
var
  img: TImage32;
begin
  img := TImage32.Create;
  img.LoadFromResource('Beetle', 'PNG');
  //Image1 is a standard Delphi TImage component
  Image1.Picture.Bitmap.SetSize(img.Width, img.Height);
  img.CopyToDc(Image1.Picture.Bitmap.Canvas.Handle);
  img.Free;
      </pre></div> </p>


  <p class="Body"> 
    <h3>Example 2 - Printing an image</h3> <div class="Code">
      <pre class="brush: delphi;">
  uses Img32, Img32.Fmt.PNG;
  ...
var
  img: TImage32;
  minBorderPxls, PageSizePxls, UsablePageSizePxls: TPoint;
  BorderSizePxls, pxlsPerInch: TPoint;
const
  BorderSizeInch = 0.5; // ie set 1/2" border
begin
  //choose a printer
  if not PrintDialog1.Execute then Exit;

  img := TImage32.Create;
  img.LoadFromResource('Beetle', 'PNG');

  Printer.Orientation := poLandscape;
  Printer.BeginDoc;
  with Printer.Canvas do
  begin
    pxlsPerInch.X   := GetDeviceCaps(Handle, LOGPIXELSX);
    pxlsPerInch.Y   := GetDeviceCaps(Handle, LOGPIXELSY);
    minBorderPxls.X := GetDeviceCaps(Handle, PHYSICALOFFSETX);
    minBorderPxls.Y := GetDeviceCaps(Handle, PHYSICALOFFSETY);
    PageSizePxls.X  := GetDeviceCaps(Handle, PHYSICALWIDTH);
    PageSizePxls.Y  := GetDeviceCaps(Handle, PHYSICALHEIGHT);
  end;
  BorderSizePxls.X := Round(BorderSizeInch.X * pxlsPerInch.X);
  if BorderSizePxls.X &lt; minBorderPxls.X then 
    BorderSizePxls.X := minBorderPxls.X;
  BorderSizePxls.Y := Round(BorderSizeInch.Y * pxlsPerInch.Y);
  if BorderSizePxls.Y &lt; minBorderPxls.Y then 
    BorderSizePxls.Y := minBorderPxls.Y;
  //get printable page size in pixels
  UsablePageSizePxls.X := PageSizePxls.X - BorderSizePxls.X *2;
  UsablePageSizePxls.Y := PageSizePxls.Y - BorderSizePxls.Y *2;
  img.CropTransparentPixels;
  img.SetBackgroundColor(clWhite32);

  //scale the image to fill the whole page
  img.Resampler := rNearestResampler;
  img.ScaleToFit(UsablePageSizePxls.X, UsablePageSizePxls.Y);

  img.CopyToDc(Printer.Canvas.Handle, BorderSizePxls.X, BorderSizePxls.Y);
  Printer.EndDoc;
  img.Free;
      </pre></div> </p>


    
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2019 Angus Johnson &nbsp; - &nbsp; Image32 ver. 4.2 &nbsp; - &nbsp; Documentation last updated on 27 July 2022 <br><br> </p>
  
</body>

</html>