<html>

<head>
    
  <script type="text/javascript" src="../../../Scripts/SyntaxHighlighter/scripts/shCore.js">
  </script>
    
  <script type="text/javascript" src="../../../Scripts/SyntaxHighlighter/scripts/shBrushDelphi.js">
  </script>
    
  <link type="text/css" rel="stylesheet" href="../../../Scripts/SyntaxHighlighter/styles/shCore.css">
    
  <link type="text/css" rel="stylesheet" href="../../../Scripts/SyntaxHighlighter/styles/shThemeDefault.css">
  

  <title>Img32.SVG.Writer</title>

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="stylesheet" href="../../../Styles/Default.css" type="text/css">

    
  <script type="text/javascript" src="../../../Scripts/bootstrap.js">
  </script>
  
</head>

<body bgcolor="#FFFFFF">
    
  <!-- THIS FILE HAS BEEN AUTOMATICALLY PROCESSED FROM A SOURCE COPY -->
    
  <!-- DO NOT EDIT MANUALLY !!! -->
  
  <table class="Banner" cellspacing="0" cellpadding="0" border="0" bordercolorlight="#303080" bordercolordark="#7070B0">
    <tr>
      <td class="Banner" nowrap=""><a href="../../_Body.htm" class="Banner"><img src="../../../Images/_Home.png" align="absmiddle">Index</a>
      </td>
      <td class="Banner" width="100%" align="right"><img src="../../../Images/_Project_Logo.png" align="absmiddle">
      </td>
    </tr>
  </table>
  <h1>Img32.SVG.Writer</h1>


  <p class="Body">This is just the very beginnings of an SVG writer (mostly a proof of concept). And so far, it'll only create very basic SVG images. I also plan at some point to merge the <a href="../Img32.SVG.Reader/classes/TSvgReader/_Body.htm"><b>TSvgReader</b></a> and <a href="./classes/TSvgWriter/_Body.htm"><b>TSvgWriter</b></a> classes so it'll be simpler to read, edit and rewrite SVGs.</p>


  <p class="Body"> 
    <table class="white">
  
      <tr>
        <td><b>Example:</b>
        </td>
      </tr>
  
      <tr>
        <td width="1000px">
    <div class="Code">
            <pre class="brush: delphi;">
    //create an SVG file ...
    with TSvgWriter.Create do
    try
      //image size &lt;svg>
      Svg.width := 250;
      Svg.height := 300;

      //group &lt;g&gt; several shapes
      //and rotate them 15 degrees anticlockwise
      
      with Svg.AddChild(TSvgGroupWriter) as 
        TSvgGroupWriter do
      begin
        MatrixTranslate(Matrix, 10,20);
        MatrixRotate(Matrix, 
          PointD(100,130), -angle15);

        //&lt;text&gt; and &lt;tspan&gt; 
        //owned by (ie inside) group
        with AddChild(TSvgTextWriter) as 
          TSvgTextWriter do
        begin
          fontInfo.family := ttfSansSerif;
          fontInfo.size := 12;
          position := PointD(30,230);
          AddText('This is ');

          with AddChild(TSvgTSpanWriter) as 
            TSvgTSpanWriter do
          begin
            FillColor := $FF990000;
            offset.sy := 5;
            fontInfo.size := 20;
            fontInfo.weight := 600;
            AddText('BIG');
          end;

          AddText(' text.');
        end;

        //&lt;rect&gt; inside group
        with AddChild(TSvgRectWriter) as 
          TSvgRectWriter do
        begin
          FillColor   := $10FF3300;
          StrokeColor := clMaroon32;
          strokeWidth := 3.0;

          RecWH := RectWH(10,10, 180, 240);
          Radii := SizeD(20,30);
        end;

        //&lt;path&gt; inside group
        with AddChild(TSvgPathWriter) as 
          TSvgPathWriter do
        begin
          FillColor   := $10007F7F;
          StrokeColor := clTeal32;
          strokeWidth := 3.0;

          MoveTo(110,80);
          CubicBezierTo(PointD(145,80), 
            PointD(145,30), PointD(110,30));
          LineHTo(70);
          LineVTo(10);
          LIneTo(110,10);
          CubicBezierTo(PointD(160,10), 
            PointD(160,100), PointD(110,100));
          CubicSplineTo(PointD(60,190), 
            PointD(110,190));
          LineTo(150,190);
          LineVTo(170);
          LineHTo(110);
          CubicBezierTo(PointD(75,170), 
            PointD(75,120), PointD(110,120));
          //ClosePath;
          Rotate(PointD(110,110), angle45);
          Skew(angle45, 0);
          Translate(-120, 25);
        end;
      end;

      //save the new SVG
      SaveToStream(memStream);
      //SaveToFile('test.svg');
    finally
      free;
    end;
            </pre></div>
  
        </td>
      </tr>

    </table> </p>


  <p class="Body"> 
    <table class="white">
      <tr>
  
        <td>
  <img src="../../../Images/svg2.png">  
  
        </td>

      </tr>

    </table> </p>


  <h2 id="Auto-Contents">Contents</h2>
  <table>
    <tr>
      <th>Types</th>
      <th>Classes</th>
    </tr>
    <tr>
      <td><a href="Types/TSvgElWriterClass.htm">TSvgElWriterClass</a>
      </td>
      <td><a href="Classes/TBaseElWriter/_Body.htm">TBaseElWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TExBaseElWriter/_Body.htm">TExBaseElWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgCircleWriter/_Body.htm">TSvgCircleWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgEllipseWriter/_Body.htm">TSvgEllipseWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgElWriter/_Body.htm">TSvgElWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgGroupWriter/_Body.htm">TSvgGroupWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgPathWriter/_Body.htm">TSvgPathWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgPolygonWriter/_Body.htm">TSvgPolygonWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgPolylineWriter/_Body.htm">TSvgPolylineWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgRectWriter/_Body.htm">TSvgRectWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgSubTextWriter/_Body.htm">TSvgSubTextWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgTextWriter/_Body.htm">TSvgTextWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgTSpanWriter/_Body.htm">TSvgTSpanWriter</a>
      </td>
    </tr>
    <tr>
      <td>
      </td>
      <td><a href="Classes/TSvgWriter/_Body.htm">TSvgWriter</a>
      </td>
    </tr>
  </table>
  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../Img32.SVG.Reader/classes/TSvgReader/_Body.htm">TSvgReader</a>, <a href="classes/TSvgWriter/_Body.htm">TSvgWriter</a></p>
    
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2019 Angus Johnson &nbsp; - &nbsp; Image32 ver. 4.2 &nbsp; - &nbsp; Documentation last updated on 27 July 2022 <br><br> </p>
  
</body>

</html>