<html>

<head>

  <title>InterpolatePoints</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="../../../../Styles/Default.css" type="text/css">
<script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../CodeScripts/bootstrap.js"></script>
</head>

<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../_Body.htm">Index</a><a class="ancestor" href="../_Body.htm">Img32.Extra</a><span class="active">InterpolatePoints</span>
  </div><br><br>

  <h1>InterpolatePoints</h1>
  <p class="Decl"><b>procedure</b> InterpolatePoints(<b>const</b> points: TPathD; tension: integer = <span class="Number">0</span>): TPathD;</p><br class="half">

  <p> Performs Hermite Interpolation on a series of points that are horizontally equidistant.<br><br> The <span class="monobold">tension</span> parameter indicates the relative weighting toward horizontality around individual points with -1 indicating less tension (less horizontal) and +1 indicating more. </p>
  <div class="code">
    <pre class="brush: delphi;">
uses Img32, Img32.Fmt.PNG, Img32.Draw, Img32.Extra;
...
var
  i: integer;
  img: TImage32;
  points, path: TPathD;
begin
  points := MakePathD([10,100, 60,50, 110,50, 160,10, 210,100]);
  path := InterpolatePoints(points, 0);

  img := TImage32.Create(220,320);
  DrawLine(img, path, 3, clBlue32, esSquare);
  for i := 0 to High(points) do
    DrawPoint(img, points[i], 3, clRed32);
  img.SaveToFile('interpolate.png');
  img.Free;
    </pre>
  </div>
  <div><img src="../../../../Images/interpolate.png">

  </div>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2023 Angus Johnson&nbsp; - &nbsp;Image32 4.2&nbsp; - &nbsp;Help file built on 26 Mar 2023 <br><br> </p>

</body>

</html>