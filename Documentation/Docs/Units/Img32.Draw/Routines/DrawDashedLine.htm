<html>

<head>
    
  <script type="text/javascript" src="../../../../Scripts/SyntaxHighlighter/scripts/shCore.js">
  </script>
    
  <script type="text/javascript" src="../../../../Scripts/SyntaxHighlighter/scripts/shBrushDelphi.js">
  </script>
    
  <link type="text/css" rel="stylesheet" href="../../../../Scripts/SyntaxHighlighter/styles/shCore.css">
    
  <link type="text/css" rel="stylesheet" href="../../../../Scripts/SyntaxHighlighter/styles/shThemeDefault.css">
  

  <title>DrawDashedLine</title>

  <meta name="viewport" content="width=device-width, initial-scale=1">


  <link rel="stylesheet" href="../../../../Styles/Default.css" type="text/css">

    
  <script type="text/javascript" src="../../../../Scripts/bootstrap.js">
  </script>
  
</head>

<body bgcolor="#FFFFFF">
    
  <!-- THIS FILE HAS BEEN AUTOMATICALLY PROCESSED FROM A SOURCE COPY -->
    
  <!-- DO NOT EDIT MANUALLY !!! -->
  
  <table class="Banner" cellspacing="0" cellpadding="0" border="0" bordercolorlight="#303080" bordercolordark="#7070B0">
    <tr>
      <td class="Banner" nowrap=""><a href="../../../_Body.htm" class="Banner"><img src="../../../../Images/_Home.png" align="absmiddle">Index</a>
      </td>
      <td class="Banner" nowrap=""><a href="../_Body.htm" class="Banner"><img src="../../../../Images/_Unit.png" align="absmiddle">Img32.Draw</a>
      </td>
      <td class="Banner" width="100%" align="right"><img src="../../../../Images/_Project_Logo.png" align="absmiddle">
      </td>
    </tr>
  </table>
  <h1>DrawDashedLine</h1>


  <p class="Decl"><b>procedure</b> DrawDashedLine(img: TImage32; <b>const</b> line: TPathD; dashPattern: TArrayOfInteger; patternOffset: PDouble; lineWidth: double; color: TColor32; endStyle: TEndStyle; joinStyle: TJoinStyle = jsAuto); <b>overload</b>;</p>


  <p class="Decl"><b>procedure</b> DrawDashedLine(img: TImage32; <b>const</b> lines: TPathsD; dashPattern: TArrayOfInteger; patternOffset: PDouble; lineWidth: double; color: TColor32; endStyle: TEndStyle; joinStyle: TJoinStyle = jsAuto); <b>overload</b>;</p>


  <p class="Decl"><b>procedure</b> DrawDashedLine(img: TImage32; <b>const</b> line: TPathD; dashPattern: TArrayOfInteger; patternOffset: PDouble; lineWidth: double; renderer: TCustomRenderer; endStyle: TEndStyle; joinStyle: TJoinStyle = jsAuto); <b>overload</b>;</p>


  <p class="Decl"><b>procedure</b> DrawDashedLine(img: TImage32; <b>const</b> lines: TPathsD; dashPattern: TArrayOfInteger; patternOffset: PDouble; lineWidth: double; renderer: TCustomRenderer; endStyle: TEndStyle; joinStyle: TJoinStyle = jsAuto); <b>overload</b>;</p>

<br>

  <p class="Body"> 
    <table class="white">

      <tr>
        <td><b>Example 1</b>
        </td>
      </tr>

      <tr>
  
        <td width="1000px">
    <div class="Code">
            <pre class="brush: delphi;">
  uses Img32, Img32.Fmt.PNG, Img32.Vector, Img32.Draw;
  ...
  var
    img: TImage32;
    path: TPathD;
    rec: TRect;
  begin
    img.SetSize(256,256);
    rec := img.Bounds;
    Windows.InflateRect(rec, -20, -20);
    path := RoundRect(rec, 30);
    DrawDashedLine(img, path,
      [20,15,10,15], nil, 7, clNavy32, esPolygon);
    img.SaveToFile('dashedLine1.png');
    img.Free;
  end;
            </pre></div>
  
        </td>

      </tr>

      <tr>
  
        <td>
    <img src="../../../../Images/dashedLine1.png">
  
        </td>

      </tr>

    </table> </p>


  <p class="Body"> 
    <table class="white">

      <tr>
        <td><b>Example 2</b>
        </td>
      </tr>

      <tr>
  
        <td width="1000px">
    <div class="Code">
            <pre class="brush: delphi;">
  uses Img32, Img32.Fmt.PNG, Img32.Vector, Img32.Draw;
  ...
  var
    img: TImage32;
    linGradRend: TLinearGradientRenderer;
    path: TPathD;
    rec: TRect;
  begin
    img := TImage32.Create(256,256);
    rec := img.Bounds;
    Windows.InflateRect(rec, -20, -20);
    path := RoundRect(rec, 30);

    linGradRend := TLinearGradientRenderer.Create;
    linGradRend.SetParameters(PointD(20,30),
      PointD(230,220), clFuchsia32, clBlue32);
    linGradRend.InsertColorStop(0.1, clFuchsia32);
    linGradRend.InsertColorStop(0.2, clRed32);
    linGradRend.InsertColorStop(0.5, $FFFFDD00);
    linGradRend.InsertColorStop(0.6, clLime32);
    linGradRend.InsertColorStop(0.9, clAqua32);
    DrawDashedLine(img, path,
      [20,15,10,15], nil, 7, linGradRend, esPolygon);
    linGradRend.Free;
    
    img1.SaveToFile('dashedLine2.png');
    img1.Free;
  end;
            </pre></div>
  
        </td>

      </tr>

      <tr>
  
        <td>
    <img src="../../../../Images/dashedLine2.png">
  
        </td>

      </tr>

    </table> </p>


    
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2019 Angus Johnson &nbsp; - &nbsp; Image32 ver. 4.2 &nbsp; - &nbsp; Documentation last updated on 27 July 2022 <br><br> </p>
  
</body>

</html>