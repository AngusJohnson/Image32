<html>

<head>

  <title>DrawInvertedPolygon</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="../../../../Styles/Default.css" type="text/css">
<script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../CodeScripts/bootstrap.js"></script>
</head>

<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../_Body.htm">Index</a><a class="ancestor" href="../_Body.htm">Img32.Draw</a><span class="active">DrawInvertedPolygon</span>
  </div><br><br>

  <h1>DrawInvertedPolygon</h1>
  <p class="Decl"><b>procedure</b> DrawInvertedPolygon(img: TImage32; <b>const</b> polygon: TPathD; fillRule: TFillRule); <b>overload;</b></p>

  <p class="Decl"><b>procedure</b> DrawInvertedPolygon(img: TImage32; <b>const</b> polygons: TPathsD; fillRule: TFillRule); <b>overload;</b></p>
  <div class="code">
<b>Example</b><br>

    <pre class="brush: delphi;">
  uses Img32, Img32.Fmt.PNG, Img32.vector, Img32.Draw;
  ...
  var
    img: TImage32;
    path: TPathD;
    rec: TRect;
  begin
    img := TImage32.Create(256,256);
    rec := img.Bounds;
    rec.Right := rec.Right div 4;
    path := Rectangle(rec);

    //draw a multicolored background
    DrawPolygon(img, path, frEvenOdd, clRed32);
    path := OffsetPath(path, rec.Width, 0);
    DrawPolygon(img, path, frEvenOdd, clYellow32);
    path := OffsetPath(path, rec.Width, 0);
    DrawPolygon(img, path, frEvenOdd, clLime32);
    path := OffsetPath(path, rec.Width, 0);
    DrawPolygon(img, path, frEvenOdd, clBlue32);

    //draw a color inverted ellipse
    path := Ellipse(RectD(30,30,226,226));
    DrawInvertedPolygon(img, path, frNonZero);

    img.SaveToFile('DrawInvertedPolygon.png');
    img.Free;
  end;
    </pre>
  </div>
  <div><img src="../../../../Images/DrawInvertedPolygon.png">

  </div>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2023 Angus Johnson&nbsp; - &nbsp;Image32 4.6&nbsp; - &nbsp;Help file built on 18 Sep 2024 <br><br> </p>

</body>

</html>