<html>

<head>

  <title>DrawLine</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="../../../../Styles/Default.css" type="text/css">
<script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../CodeScripts/bootstrap.js"></script>
</head>

<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../_Body.htm">Index</a><a class="ancestor" href="../_Body.htm">Img32.Draw</a><span class="active">DrawLine</span>
  </div><br><br>

  <h1>DrawLine</h1>
  <p class="Decl"><b>procedure</b> DrawLine(img: TImage32; <b>const</b> line: TPathD; lineWidth: double; color: TColor32; endStyle: <a href="../../Img32.Vector/Types/TEndStyle.htm">TEndStyle</a>; joinStyle: <a href="../../Img32.Vector/Types/TJoinStyle.htm">TJoinStyle</a> = jsAuto; miterLimit: double = 2); <b>overload</b>;</p>
  <p class="Decl"><b>procedure</b> DrawLine(img: TImage32; <b>const</b> line: TPathD; lineWidth: double; renderer: TCustomRenderer; endStyle: <a href="../../Img32.Vector/Types/TEndStyle.htm">TEndStyle</a>; joinStyle: <a href="../../Img32.Vector/Types/TJoinStyle.htm">TJoinStyle</a> = jsAuto; miterLimit: double = 2); <b>overload</b>;</p>
  <p class="Decl"><b>procedure</b> DrawLine(img: TImage32; <b>const</b> lines: TPathsD; lineWidth: double; color: TColor32; endStyle: <a href="../../Img32.Vector/Types/TEndStyle.htm">TEndStyle</a>; joinStyle: <a href="../../Img32.Vector/Types/TJoinStyle.htm">TJoinStyle</a> = jsAuto; miterLimit: double = 2); <b>overload</b>;</p>
  <p class="Decl"><b>procedure</b> DrawLine(img: TImage32; <b>const</b> lines: TPathsD; lineWidth: double; renderer: TCustomRenderer; endStyle: <a href="../../Img32.Vector/Types/TEndStyle.htm">TEndStyle</a>; joinStyle: <a href="../../Img32.Vector/Types/TJoinStyle.htm">TJoinStyle</a> = jsAuto; miterLimit: double = 2); <b>overload</b>;</p><br class="half">

  <p> <b>EndStyle</b><br> <img src="../../../../Images/EndStyle.png"><br><br> <b>JoinStyle</b><br> <img src="../../../../Images/JoinStyle.png"><br><br> </p>
  <div class="code">
<b>Example 1</b><br>

    <pre class="brush: delphi;">
  uses Img32, Img32.Fmt.PNG, Img32.vector, Img32.Draw;
  ...
  var
    img: TImage32;
    path, path2: TPathD;
    rec: TRect;
  const
    nPoints = 5; //must be an odd number
    npDiv2  = nPoints div 2;
  begin
    img := TImage32.Create(256,256);
    rec := img.Bounds;
    Windows.InflateRect(rec, -10,-10);

    //create N pointed star
    path := Ellipse(rec, nPoints);
    SetLength(path2, nPoints);
    for i := 0 to nPoints -1 do
      path2[i] := path[((i* npDiv2) mod nPoints)];

    //draw the line
    DrawLine(img, path2, 5, clNavy32, esPolygon);

    img.SaveToFile('line1.png');
    img.Free;
  end;
    </pre>
  </div>
  <div><img src="../../../../Images/line1.png">

  </div>
  <div class="code">
<b>Example 2</b><br>

    <pre class="brush: delphi;">
  uses Img32, Img32.Fmt.PNG, Img32.vector, Img32.Draw;
  ...
  var
    img: TImage32;
    path, path2: TPathD;
    rec: TRect;
  begin
    img := TImage32.Create(256,256);

    rec := img.Bounds;
    Windows.InflateRect(rec, -30,-10);
    Windows.OffsetRect(rec, 0, 60);
    with rec do //construct a bezier curve
      path := FlattenCBezier(
        PointD(left, top), PointD(left, bottom),
        PointD(right, bottom), PointD(right, top));
    //draw the bezier curve
    DrawLine(img, path, 10, clMaroon32, esRound);

    img.SaveToFile('line2.png');
    img.Free;
  end;
    </pre>
  </div>
  <div><img src="../../../../Images/line2.png">

  </div>
  <div class="code">
<b>Example 3</b><br>

    <pre class="brush: delphi;">
  uses Img32, Img32.Fmt.PNG, Img32.vector, Img32.Draw;
  ...
  var
    img: TImage32;
    imageRender: TImageRenderer;
    path, path2: TPathD;
    rec: TRect;
  const
    nPoints = 5; //must be an odd number
    npDiv2  = nPoints div 2;
  begin
    img := TImage32.Create(256, 256);
    rec := img.Bounds;
    Windows.InflateRect(rec, -10,-10);

    //create N pointed star
    path := Ellipse(rec, nPoints);
    SetLength(path2, nPoints);
    for i := 0 to nPoints -1 do
      path2[i] := path[((i* npDiv2) mod nPoints)];

    imageRender := TImageRenderer.Create;
    imageRender.Image.LoadFromResource('TILE', 'BMP');
    imageRender.Image.Resize(10, 10);
    DrawLine(img, path2, 10, imageRender, esPolygon);
    imageRender.Free;
    
    img.SaveToFile('line3.png');
    img.Free;
  end;
    </pre>
  </div>
  <div><img src="../../../../Images/line3.png">

  </div>
  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../../Img32.Vector/Types/TEndStyle.htm">TEndStyle</a>, <a href="../../Img32.Vector/Types/TJoinStyle.htm">TJoinStyle</a></p>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2023 Angus Johnson&nbsp; - &nbsp;Image32 4.6&nbsp; - &nbsp;Help file built on 18 Sep 2024 <br><br> </p>

</body>

</html>