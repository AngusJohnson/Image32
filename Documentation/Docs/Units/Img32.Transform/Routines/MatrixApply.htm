<html>

<head>

  <title>MatrixApply</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="../../../../Styles/Default.css" type="text/css">
<script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../CodeScripts/bootstrap.js"></script>
</head>

<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../_Body.htm">Index</a><a class="ancestor" href="../_Body.htm">Img32.Transform</a><span class="active">MatrixApply</span>
  </div><br><br>

  <h1>MatrixApply</h1>
  <p class="Decl"><b>procedure</b> MatrixApply(<b>const</b> matrix: TMatrixD; var pt: TPointD); overload;<br><br></p>

  <p class="Decl"><b>procedure</b> MatrixApply(<b>const</b> matrix: TMatrixD; var path: TPathD); overload;<br><br></p>

  <p class="Decl"><b>procedure</b> MatrixApply(<b>const</b> matrix: TMatrixD; var paths: TPathsD); overload;</p><br class="half">

  <p>Applies a matrix transformation either to a single coordinate, or to a series of path coordinates.</p>
  <div class="code">
    <pre class="brush: delphi;">
uses Img32, Img32.Fmt.PNG, Img32.Vector;
...
var
  img: TImage32;
  m: TMatrixD;
begin
  img := TImage32.Create;
  img.SetSize(256,256);

  //draw buttons at the corners of a square inset 50px from the image's edges.
  pts := Rectangle(50, 50, 206, 206);
  for i := 0 to high(pts) do
    DrawButton(img, pts[i], DpiAware(20), $FF00AA00, [boDropShadow]);

  //create a matrix that rotates 15 degrees about the point [128,128] and
  //draw shrinking buttons while rotating these a total of 4 * 15 degrees
  m := IdentityMatrix;
  MatrixRotate(m, PointD(128,128), pi/12);
  for i := 1 to 4 do
  begin
    MatrixApply(m, pts);
    for j := 0 to high(pts) do
      DrawButton(img, pts[j], DpiAware(14 - i), $CC00CC00, [boDropShadow]);
  end;
    
  img.SaveToFile('Rotate4Buttons.png');
  img.Free;
end;
    </pre>
  </div>
  <div><img style="vertical-align: -90px;" src="../../../../Images/matrix.png">

  </div>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2010-2023 Angus Johnson&nbsp; - &nbsp;Image32 4.2&nbsp; - &nbsp;Help file built on 26 Mar 2023 <br><br> </p>

</body>

</html>